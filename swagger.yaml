openapi: "3.0.0"
info:
  title: learn express and swagger
  description: A Course Segment about writing Docs
  version: 1.1.0
  contact:
    email: yash@gmail.com
    url: "https://yash.com"

# servers:
#   - url: "https://localhost:4000/api/v1"
#     description: for local host - secure or production
#   - url: "http://localhost:4000/api/v1"
#     description: for local host - regular or staging

servers:
  - url: "{protocol}://localhost:4000/api/{version}"
    description: for local host - secure or production
    variables:
      version: # Can be named anything, it is a variable
        enum:
          - v1
          - v2
        default: v1  
      protocol: # Can be named anything, it is a variable
        enum:
          - http
          - https
        default: http

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /lco:
    get:
      tags:
      - String #Group Name
      summary: returns a greet message from lco
      responses:
        200:
          description: All good, success
          content:
            application/json:
              schema:
                type: string
                example: "mystring"      
        400:
          description: Bad Request
        500:
          description: Internal server error

  /lcoobject:
    get:
      tags:
      - Object
      summary: returns a unique course
      responses:
        200:
          description: All good, success
          content:
            application/json:
              schema:
                type: object
                properties: # only comes when type is object
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number          
        400:
          description: Bad Request
        500:
          description: Internal server error

  /courses:
    get:
      tags:
      - Array
      summary: returns all courses
      responses:
        200:
          description: All good, success
          content:
            application/json:
              schema:
                type: array
                items: # only for Array type
                  type: object
                  properties: # only comes when type is object
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number     
        400:
          description: Bad Request
        500:
          description: Internal server error

  /mycourse/{courseId}:
    get:
      tags:
      - String
      summary: returns course based on request id
      parameters:
        - name: courseId
          in: path
          required: true
          default: 22
          schema: 
            type: string
      responses:
        200:
          description: All good, success
          content:
            application/json:
              schema:
                type: object
                properties: # only comes when type is object
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number     
        400:
          description: Bad Request
        500:
          description: Internal server error

  /addCourse:
    post:
      tags:
      - String
      summary: adds a new course to existing courses
      consumes: # only in POST request
        - application/json
      produces:
        - application/json  
      requestBody:
        required: true
        content:
          application/json:
              schema:
                type: object
                properties: # only comes when type is object
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
      responses:
        200:
          description: All good, success
          content:
            application/json:
              schema:
                type: boolean
                    
        400:
          description: Bad Request
        500:
          description: Internal server error
